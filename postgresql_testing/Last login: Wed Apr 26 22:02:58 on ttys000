Last login: Wed Apr 26 22:02:58 on ttys000
You have new mail.
Davids-MacBook-Air:~ davidterwilliger$ psql postgres -U davidterwilliger
psql (9.6.2)
Type "help" for help.

postgres=# \du
                                       List of roles
    Role name     |                         Attributes                         | Member of 
------------------+------------------------------------------------------------+-----------
 davidterwilliger | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 patrick          | Create DB                                                  | {}

postgres=# q
postgres-# exit()
postgres-# exit
postgres-# \q
Davids-MacBook-Air:~ davidterwilliger$ psql postgres -U patrick
psql (9.6.2)
Type "help" for help.

postgres=> CREATE DATABASE super_awesome_application;
CREATE DATABASE
postgres=> GRANT ALL PRIVILEGES ON DATABASE super_awesome_application TO patrick;
GRANT
postgres=> \list
                                                      List of databases
           Name            |      Owner       | Encoding |   Collate   |    Ctype    |           Access privileges           
---------------------------+------------------+----------+-------------+-------------+---------------------------------------
 davidterwilliger          | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 super_awesome_application | patrick          | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/patrick                          +
                           |                  |          |             |             | patrick=CTc/patrick
 template0                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
 template1                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
(5 rows)

postgres=> \connect super_awesome_application
You are now connected to database "super_awesome_application" as user "patrick".
super_awesome_application=> \dt
No relations found.
super_awesome_application=> \q
Davids-MacBook-Air:~ davidterwilliger$ postgres_testing.py
-bash: postgres_testing.py: command not found
Davids-MacBook-Air:~ davidterwilliger$ python postgres_testing.py
python: can't open file 'postgres_testing.py': [Errno 2] No such file or directory
Davids-MacBook-Air:~ davidterwilliger$ ls
13-04-2017.csv	15-04-2017.csv	Desktop		Downloads	Library		Music		Public		log.txt
14-04-2017.csv	Applications	Documents	Google Drive	Movies		Pictures	Untitled.png	mbox
Davids-MacBook-Air:~ davidterwilliger$ cd desktop
Davids-MacBook-Air:desktop davidterwilliger$ ls
4-8-17-status					Google Drive					rmv-scraping
Broad						Langley pictures				scrape_locations.py
Dt						Screen Shot 2017-04-15 at 2.02.55 PM.png	startbootstrap-simple-sidebar-gh-pages
FullSizeRender.jpg				postgres_testing				website
Davids-MacBook-Air:desktop davidterwilliger$ cd postgres_testing
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
  File "postgres_testing.py", line 10
    conn = psycopg2.connect("dbname='template1' user='davidterwilliger' host='localhost' password='Brunodog123'")
                                                                                                                ^
IndentationError: unindent does not match any outer indentation level
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
I am unable to connect to the database
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
I am unable to connect to the database
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ psqp
-bash: psqp: command not found
Davids-MacBook-Air:postgres_testing davidterwilliger$ psql
psql (9.6.2)
Type "help" for help.

davidterwilliger=# \du
                                       List of roles
    Role name     |                         Attributes                         | Member of 
------------------+------------------------------------------------------------+-----------
 davidterwilliger | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 patrick          | Create DB                                                  | {}

davidterwilliger=# \q
Davids-MacBook-Air:postgres_testing davidterwilliger$ ls
postgres_testing.py	test_1.py
Davids-MacBook-Air:postgres_testing davidterwilliger$ python test_1.py
Traceback (most recent call last):
  File "test_1.py", line 4, in <module>
    from config import config
ImportError: No module named config
Davids-MacBook-Air:postgres_testing davidterwilliger$ which psycopg2
Davids-MacBook-Air:postgres_testing davidterwilliger$ sdf
-bash: sdf: command not found
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
Traceback (most recent call last):
  File "postgres_testing.py", line 8, in <module>
    from config import config
ImportError: No module named config
Davids-MacBook-Air:postgres_testing davidterwilliger$ python postgres_testing.py
123
Davids-MacBook-Air:postgres_testing davidterwilliger$ python test_1.py
Traceback (most recent call last):
  File "test_1.py", line 4, in <module>
    from config import config
ImportError: No module named config
Davids-MacBook-Air:postgres_testing davidterwilliger$ python test_2.py
Connecting to database
	->host='localhost' dbname='my_database' user='postgres' password='secret'
Traceback (most recent call last):
  File "test_2.py", line 21, in <module>
    main()
  File "test_2.py", line 14, in main
    conn = psycopg2.connect(conn_string)
  File "/Library/Python/2.7/site-packages/psycopg2/__init__.py", line 130, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  role "postgres" does not exist

Davids-MacBook-Air:postgres_testing davidterwilliger$ python test_2.py
Connecting to database
	->host='localhost' dbname='my_database' user='davidterwilliger' password='secret'
Traceback (most recent call last):
  File "test_2.py", line 21, in <module>
    main()
  File "test_2.py", line 14, in main
    conn = psycopg2.connect(conn_string)
  File "/Library/Python/2.7/site-packages/psycopg2/__init__.py", line 130, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "my_database" does not exist

Davids-MacBook-Air:postgres_testing davidterwilliger$ psql postgres -U davidterwilliger
psql (9.6.2)
Type "help" for help.

postgres=# \du
                                       List of roles
    Role name     |                         Attributes                         | Member of 
------------------+------------------------------------------------------------+-----------
 davidterwilliger | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 patrick          | Create DB                                                  | {}

postgres=# \list
                                                      List of databases
           Name            |      Owner       | Encoding |   Collate   |    Ctype    |           Access privileges           
---------------------------+------------------+----------+-------------+-------------+---------------------------------------
 davidterwilliger          | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 super_awesome_application | patrick          | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/patrick                          +
                           |                  |          |             |             | patrick=CTc/patrick
 template0                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
 template1                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
(5 rows)

postgres=# \q
Davids-MacBook-Air:postgres_testing davidterwilliger$ python test_2.py
Connecting to database
	->host='localhost' dbname='template0' user='davidterwilliger' password='secret'
Traceback (most recent call last):
  File "test_2.py", line 21, in <module>
    main()
  File "test_2.py", line 14, in main
    conn = psycopg2.connect(conn_string)
  File "/Library/Python/2.7/site-packages/psycopg2/__init__.py", line 130, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  database "template0" is not currently accepting connections

Davids-MacBook-Air:postgres_testing davidterwilliger$ python test_2.py
Connecting to database
	->host='localhost' dbname='super_awesome_application' user='davidterwilliger' password='secret'
Connected!

Davids-MacBook-Air:postgres_testing davidterwilliger$ psql postgres -U davidterwilliger
psql (9.6.2)
Type "help" for help.

postgres=# \list
                                                      List of databases
           Name            |      Owner       | Encoding |   Collate   |    Ctype    |           Access privileges           
---------------------------+------------------+----------+-------------+-------------+---------------------------------------
 davidterwilliger          | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 super_awesome_application | patrick          | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/patrick                          +
                           |                  |          |             |             | patrick=CTc/patrick
 template0                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
 template1                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
(5 rows)

postgres=# \d
No relations found.
postgres=# \d super_awesome_application
Did not find any relation named "super_awesome_application".
postgres=# \d
No relations found.
postgres=# CREATE TABLE products (
postgres(#     product_no integer,
postgres(#     name text,
postgres(#     price numeric
postgres(# );
CREATE TABLE
postgres=# \list
                                                      List of databases
           Name            |      Owner       | Encoding |   Collate   |    Ctype    |           Access privileges           
---------------------------+------------------+----------+-------------+-------------+---------------------------------------
 davidterwilliger          | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 super_awesome_application | patrick          | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/patrick                          +
                           |                  |          |             |             | patrick=CTc/patrick
 template0                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
 template1                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
(5 rows)

postgres=# \du
                                       List of roles
    Role name     |                         Attributes                         | Member of 
------------------+------------------------------------------------------------+-----------
 davidterwilliger | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 patrick          | Create DB                                                  | {}

postgres=# \d
              List of relations
 Schema |   Name   | Type  |      Owner       
--------+----------+-------+------------------
 public | products | table | davidterwilliger
(1 row)

postgres=# \lsit
Invalid command \lsit. Try \? for help.
postgres=# \list
                                                      List of databases
           Name            |      Owner       | Encoding |   Collate   |    Ctype    |           Access privileges           
---------------------------+------------------+----------+-------------+-------------+---------------------------------------
 davidterwilliger          | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 super_awesome_application | patrick          | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/patrick                          +
                           |                  |          |             |             | patrick=CTc/patrick
 template0                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
 template1                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
(5 rows)

postgres=# \dt
              List of relations
 Schema |   Name   | Type  |      Owner       
--------+----------+-------+------------------
 public | products | table | davidterwilliger
(1 row)

postgres=# INSERT INTO products VALUES (1, 'Cheese', 9.99);
INSERT 0 1
postgres=# \dt
              List of relations
 Schema |   Name   | Type  |      Owner       
--------+----------+-------+------------------
 public | products | table | davidterwilliger
(1 row)

postgres=# \list
                                                      List of databases
           Name            |      Owner       | Encoding |   Collate   |    Ctype    |           Access privileges           
---------------------------+------------------+----------+-------------+-------------+---------------------------------------
 davidterwilliger          | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 super_awesome_application | patrick          | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/patrick                          +
                           |                  |          |             |             | patrick=CTc/patrick
 template0                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
 template1                 | davidterwilliger | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/davidterwilliger                  +
                           |                  |          |             |             | davidterwilliger=CTc/davidterwilliger
(5 rows)

postgres=# \du
                                       List of roles
    Role name     |                         Attributes                         | Member of 
------------------+------------------------------------------------------------+-----------
 davidterwilliger | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 patrick          | Create DB                                                  | {}

postgres=# \d
              List of relations
 Schema |   Name   | Type  |      Owner       
--------+----------+-------+------------------
 public | products | table | davidterwilliger
(1 row)

postgres=# \d products
     Table "public.products"
   Column   |  Type   | Modifiers 
------------+---------+-----------
 product_no | integer | 
 name       | text    | 
 price      | numeric | 

postgres=# \d+ products
                         Table "public.products"
   Column   |  Type   | Modifiers | Storage  | Stats target | Description 
------------+---------+-----------+----------+--------------+-------------
 product_no | integer |           | plain    |              | 
 name       | text    |           | extended |              | 
 price      | numeric |           | main     |              | 

postgres=# INSERT INTO products (product_no, name, price) VALUES
postgres-#     (1, 'Cheese', 9.99),
postgres-#     (2, 'Bread', 1.99),
postgres-#     (3, 'Milk', 2.99);
INSERT 0 3
postgres=# \d+ products
                         Table "public.products"
   Column   |  Type   | Modifiers | Storage  | Stats target | Description 
------------+---------+-----------+----------+--------------+-------------
 product_no | integer |           | plain    |              | 
 name       | text    |           | extended |              | 
 price      | numeric |           | main     |              | 

postgres=# SELECT * FROM "products";
 product_no |  name  | price 
------------+--------+-------
          1 | Cheese |  9.99
          1 | Cheese |  9.99
          2 | Bread  |  1.99
          3 | Milk   |  2.99
(4 rows)

postgres=# 
